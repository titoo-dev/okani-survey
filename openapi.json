{
  "openapi": "3.0.3",
  "info": {
    "title": "Okani Survey API",
    "description": "REST API for the Okani Survey application - a citizen satisfaction survey system for ANUTTC land procedures in Gabon. This API manages survey submissions, descriptors (dropdown options), and survey analytics.",
    "version": "1.0.0",
    "contact": {
      "name": "Okani Survey Support",
      "email": "support@okanisurvey.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://okanisurvey.com/license"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://okani-survey.vercel.app/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Descriptors",
      "description": "Manage dropdown options and form field values"
    },
    {
      "name": "Surveys",
      "description": "Survey submission and retrieval operations"
    }
  ],
  "paths": {
    "/descriptors": {
      "get": {
        "tags": ["Descriptors"],
        "summary": "Get all descriptors",
        "description": "Retrieve all descriptors or filter by type. Descriptors are sorted by type, order, and label. Note: Descriptors are read-only via this API and should be managed through database seeding or admin tools.",
        "operationId": "getDescriptors",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Filter descriptors by type (e.g., 'payment_mode', 'user_type', 'legal_entity')",
            "required": false,
            "schema": {
              "type": "string",
              "example": "payment_mode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Descriptor"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/descriptors/types": {
      "get": {
        "tags": ["Descriptors"],
        "summary": "Get all descriptor types",
        "description": "Retrieve all unique descriptor types available in the system",
        "operationId": "getDescriptorTypes",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["payment_mode", "user_type", "legal_entity", "nationality"]
                    },
                    "count": {
                      "type": "integer",
                      "example": 4
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/surveys": {
      "get": {
        "tags": ["Surveys"],
        "summary": "Get all surveys",
        "description": "Retrieve all surveys with optional filtering and pagination. Array fields (satisfaction ratings, trust transparency) are automatically parsed from JSON strings.",
        "operationId": "getSurveys",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filter by email (case-insensitive partial match)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "user@example.com"
            }
          },
          {
            "name": "stageReached",
            "in": "query",
            "description": "Filter by stage reached in the procedure",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["depot", "enquete", "etat-lieux", "affichage", "bornage", "evaluation", "decision"],
              "example": "enquete"
            }
          },
          {
            "name": "dossierId",
            "in": "query",
            "description": "Filter by dossier ID (case-insensitive partial match)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "DOSS-2025-001"
            }
          },
          {
            "name": "userType",
            "in": "query",
            "description": "Filter by user type",
            "required": false,
            "schema": {
              "type": "string",
              "example": "usager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Survey"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": ["Surveys"],
        "summary": "Create a new survey",
        "description": "Submit a new survey with comprehensive data about the user's experience with ANUTTC procedures. Array fields (satisfaction ratings) should be provided as arrays and will be stored as JSON strings.",
        "operationId": "createSurvey",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SurveyInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Survey created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Survey"
                    },
                    "message": {
                      "type": "string",
                      "example": "Survey created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Descriptor": {
        "type": "object",
        "description": "Read-only descriptor object. Descriptors should be managed through database seeding or admin tools.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier (CUID)",
            "example": "clx1234567890abcdef"
          },
          "type": {
            "type": "string",
            "description": "Descriptor type (e.g., payment_mode, user_type, legal_entity)",
            "example": "payment_mode"
          },
          "value": {
            "type": "string",
            "description": "Internal value used in forms and database",
            "example": "especes"
          },
          "label": {
            "type": "string",
            "description": "Human-readable label displayed in UI",
            "example": "Esp√®ces"
          },
          "order": {
            "type": "integer",
            "description": "Display order (lower numbers appear first)",
            "example": 0,
            "default": 0
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-10-07T12:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-10-07T12:00:00.000Z"
          }
        },
        "required": ["id", "type", "value", "label", "order", "createdAt", "updatedAt"]
      },
      "Survey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier (CUID)",
            "example": "clx1234567890abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Survey submission timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email (unique identifier)",
            "example": "user@example.com"
          },
          "stageReached": {
            "type": "string",
            "description": "Current stage in the procedure",
            "enum": ["depot", "enquete", "etat-lieux", "affichage", "bornage", "evaluation", "decision"],
            "example": "enquete"
          },
          "dossierId": {
            "type": "string",
            "description": "Dossier reference number",
            "example": "DOSS-2025-001"
          },
          "depositCity": {
            "type": "string",
            "description": "City where dossier was deposited",
            "example": "Libreville"
          },
          "regularizationCity": {
            "type": "string",
            "description": "City of land regularization",
            "example": "Libreville"
          },
          "residenceCity": {
            "type": "string",
            "description": "User's residence city",
            "example": "Libreville"
          },
          "userType": {
            "type": "string",
            "description": "Type of user",
            "example": "usager"
          },
          "legalEntity": {
            "type": "string",
            "description": "Legal entity type (physique/morale)",
            "enum": ["physique", "morale"],
            "example": "physique"
          },
          "nationality": {
            "type": "string",
            "description": "User nationality",
            "example": "Gabonaise"
          },
          "depotEvaluation": {
            "type": "string",
            "nullable": true,
            "description": "Evaluation of deposit stage"
          },
          "depotPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for deposit"
          },
          "depotOtherPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Other payment mode details (if payment mode is 'autre')"
          },
          "depotAmountPaid": {
            "type": "string",
            "nullable": true,
            "description": "Amount paid for deposit"
          },
          "depotHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt for deposit"
          },
          "depotHasAcknowledgment": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received acknowledgment"
          },
          "enqueteDelayPerceived": {
            "type": "string",
            "nullable": true,
            "description": "Perceived delay for enquete stage"
          },
          "enquetePaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for enquete"
          },
          "enqueteOtherPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Other payment mode details"
          },
          "enqueteHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt"
          },
          "enqueteSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings for enquete stage (stored as JSON string in DB)"
          },
          "etatLieuxDelayPerceived": {
            "type": "string",
            "nullable": true,
            "description": "Perceived delay for etat des lieux stage"
          },
          "etatLieuxPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for etat des lieux"
          },
          "etatLieuxOtherPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Other payment mode details"
          },
          "etatLieuxHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt"
          },
          "etatLieuxSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings (stored as JSON string in DB)"
          },
          "affichageInTime": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether affichage was done in time"
          },
          "affichageWasInformed": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user was informed about affichage"
          },
          "affichageInformationChannel": {
            "type": "string",
            "nullable": true,
            "description": "Channel through which user was informed"
          },
          "affichageSufficientDelay": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether affichage delay was sufficient"
          },
          "affichageHasOpposition": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether there was opposition during affichage"
          },
          "affichageFees": {
            "type": "string",
            "nullable": true,
            "description": "Fees paid for affichage"
          },
          "affichageHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt"
          },
          "affichageSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings (stored as JSON string in DB)"
          },
          "bornageDelayPerceived": {
            "type": "string",
            "nullable": true,
            "description": "Perceived delay for bornage stage"
          },
          "bornagePaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for bornage"
          },
          "bornageOtherPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Other payment mode details"
          },
          "bornageHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt"
          },
          "bornageSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings (stored as JSON string in DB)"
          },
          "evaluationPriceUnderstanding": {
            "type": "string",
            "nullable": true,
            "description": "Whether user understood the price evaluation"
          },
          "evaluationPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for evaluation"
          },
          "evaluationOtherPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Other payment mode details"
          },
          "evaluationHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt"
          },
          "evaluationSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings (stored as JSON string in DB)"
          },
          "decisionDelay": {
            "type": "string",
            "nullable": true,
            "description": "Delay for decision stage"
          },
          "decisionPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for decision"
          },
          "decisionOtherPaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Other payment mode details"
          },
          "decisionHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt"
          },
          "wasTransmitted": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether decision was transmitted"
          },
          "hasActeCession": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user has acte de cession"
          },
          "hasTitrePropriete": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user has titre de propri√©t√©"
          },
          "decisionSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings (stored as JSON string in DB)"
          },
          "hasUnofficialPayment": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user made unofficial payments"
          },
          "hasFavoritism": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user observed favoritism"
          },
          "trustTransparency": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Trust and transparency ratings (stored as JSON string in DB)"
          },
          "hadOpposition": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user faced opposition"
          },
          "oppositionDate": {
            "type": "string",
            "nullable": true,
            "description": "Date of opposition"
          },
          "oppositionNature": {
            "type": "string",
            "nullable": true,
            "description": "Nature of opposition"
          },
          "oppositionNatureOther": {
            "type": "string",
            "nullable": true,
            "description": "Other nature details (if nature is 'autre')"
          },
          "litigeDelay": {
            "type": "string",
            "nullable": true,
            "description": "Delay for litigation resolution"
          },
          "paidLitigeFees": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user paid litigation fees"
          },
          "litigePaymentMode": {
            "type": "string",
            "nullable": true,
            "description": "Payment mode for litigation"
          },
          "litigePaymentAmount": {
            "type": "string",
            "nullable": true,
            "description": "Amount paid for litigation"
          },
          "litigeHasReceipt": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user received receipt for litigation payment"
          },
          "wasInformedProcedure": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user was informed about the procedure"
          },
          "sentFormalLetter": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether user sent formal letter"
          },
          "letterReference": {
            "type": "string",
            "nullable": true,
            "description": "Reference of formal letter"
          },
          "litigeCause": {
            "type": "string",
            "nullable": true,
            "description": "Cause of litigation"
          },
          "litigeCauseOther": {
            "type": "string",
            "nullable": true,
            "description": "Other cause details (if cause is 'autre')"
          },
          "litigeSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Satisfaction ratings for litigation handling (stored as JSON string in DB)"
          },
          "litigeOutcome": {
            "type": "string",
            "nullable": true,
            "description": "Outcome of litigation"
          },
          "litigeOutcomeOther": {
            "type": "string",
            "nullable": true,
            "description": "Other outcome details (if outcome is 'autre')"
          },
          "litigeComments": {
            "type": "string",
            "nullable": true,
            "description": "Additional comments about litigation"
          },
          "totalDelay": {
            "type": "string",
            "nullable": true,
            "description": "Total delay for entire procedure"
          },
          "transmissionDate": {
            "type": "string",
            "nullable": true,
            "description": "Date of final transmission"
          },
          "totalCost": {
            "type": "string",
            "nullable": true,
            "description": "Total cost of procedure (required)"
          },
          "globalSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "nullable": true,
            "description": "Overall satisfaction ratings (required, stored as JSON string in DB)"
          },
          "generalSuggestions": {
            "type": "string",
            "nullable": true,
            "description": "General suggestions and comments"
          }
        },
        "required": ["id", "email", "stageReached", "dossierId", "depositCity", "regularizationCity", "residenceCity", "userType", "legalEntity", "nationality", "createdAt", "updatedAt"]
      },
      "SurveyInput": {
        "type": "object",
        "description": "Input schema for creating a survey. Required fields depend on the stage reached and user responses.",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1,
            "example": "user@example.com"
          },
          "stageReached": {
            "type": "string",
            "enum": ["depot", "enquete", "etat-lieux", "affichage", "bornage", "evaluation", "decision"],
            "example": "enquete"
          },
          "dossierId": {
            "type": "string",
            "minLength": 1,
            "example": "DOSS-2025-001"
          },
          "depositCity": {
            "type": "string",
            "minLength": 1,
            "example": "Libreville"
          },
          "regularizationCity": {
            "type": "string",
            "minLength": 1,
            "example": "Libreville"
          },
          "residenceCity": {
            "type": "string",
            "minLength": 1,
            "example": "Libreville"
          },
          "userType": {
            "type": "string",
            "minLength": 1,
            "example": "usager"
          },
          "legalEntity": {
            "type": "string",
            "enum": ["physique", "morale"],
            "example": "physique"
          },
          "nationality": {
            "type": "string",
            "minLength": 1,
            "example": "Gabonaise"
          },
          "totalCost": {
            "type": "string",
            "description": "Total cost (required)"
          },
          "globalSatisfaction": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 1,
            "description": "Overall satisfaction ratings (required)"
          },
          "hasUnofficialPayment": {
            "type": "boolean",
            "description": "Whether user made unofficial payments (required)"
          },
          "hasFavoritism": {
            "type": "boolean",
            "description": "Whether user observed favoritism (required)"
          },
          "trustTransparency": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 1,
            "description": "Trust and transparency ratings (required)"
          },
          "hadOpposition": {
            "type": "boolean",
            "description": "Whether user faced opposition (required)"
          }
        },
        "required": ["email", "stageReached", "dossierId", "depositCity", "regularizationCity", "residenceCity", "userType", "legalEntity", "nationality", "totalCost", "globalSatisfaction", "hasUnofficialPayment", "hasFavoritism", "trustTransparency", "hadOpposition"]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current page number",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "description": "Items per page",
            "example": 10
          },
          "total": {
            "type": "integer",
            "description": "Total number of items",
            "example": 45
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages",
            "example": 5
          }
        },
        "required": ["page", "limit", "total", "totalPages"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "An error occurred"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message",
            "example": "Additional error details"
          }
        },
        "required": ["success", "error"]
      },
      "ValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "issues": {
                "type": "array",
                "description": "Validation issues from Zod",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "too_small"
                    },
                    "path": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["email"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Email invalide"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "responses": {
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "error": "Resource not found"
            }
          }
        }
      }
    }
  }
}

